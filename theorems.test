# ############# Theorems ################

#----------------------------------------
#Equivalence
#----------------------------------------

p == q == r == p == q == r
p == q == q == p
true == p == p
true
p == p

#----------------------------------------
#Negation and false
#----------------------------------------

false == ~true
~(p == q) == ~p == q
~p == q == p == ~q
p == ~p == false
:addLaw a == ~a -> false

#----------------------------------------
#Disjunction
#----------------------------------------

(p \/ q) \/ r == p \/ (q \/ r)
p \/ p == p
p \/ (q == r) == (p \/ q) == (p \/ r)
p \/ ~p == true
p \/ false == p
p \/ q == p \/ ~q == p

:addLaw a \/ b == a \/ ~b -> a
:addLaw a \/ b == a -> a \/ ~b
:addLaw a \/ ~b == a -> a \/ b

p \/ true == true

#----------------------------------------
#Conjunction
#----------------------------------------

p /\ q == p == q == p \/ q
p /\ (q /\ r) == (p /\ q) /\ r
p /\ q == q /\ p
p /\ ~p == false

p /\ (p \/ q) == p
:addLaw a /\ (a \/ b) -> a
p \/ (p /\ q) == p
:addLaw a \/ (a /\ b) -> a

p /\ (~p \/ q) == p /\ q
:addLaw a /\ (~(a) \/ b) -> a /\ b

p \/ (~p /\ q) == p \/ q

p /\ (q \/ r) == (p /\ q) \/ (p /\ r)
p \/ (q /\ r) == (p \/ q) /\ (p \/ r) 

:addLaw (a /\ b) \/ (a /\ c) -> a /\ (b \/ c)
:addLaw (a \/ b) /\ (a \/ c) -> a \/ (b /\ c)

~(p \/ q) == ~p /\ ~q
~(p /\ q) == ~p \/ ~q

p /\ q == p /\ ~q == ~p
p /\ (q == r) == p /\ q == p /\ r == p
:addLaw a /\ b == a /\ c == a -> a /\ (b == c)
:addLaw a /\ b == a /\ c -> a == a /\ (b == c)

p /\ (q == p) == p /\ q
(p == q) /\ (r == p) == (p == q) /\ (r == q)

p == q == (p /\ q) \/ (~p /\ ~q)

:addLaw (a /\ b) \/ (~a /\ ~b) -> a == b

#----------------------------------------
#Implication
#----------------------------------------

(p => q) == p \/ q == q
p => q == ~p \/ q
:addLaw a => b -> ~a \/ b

(p => q) == p /\ q == p

p => q == (~q => ~p)

p => (q == r) == p /\ q == p /\ r
:addLaw a => (b == c) -> a /\ b == a /\ c
:addLaw a => (b == c) == a /\ b -> a /\ c
p => (q == r) == p => q == p => r
p => (q => r) == (p => q) => (p => r)

p /\ q => r == p => (q => r)

:addLaw a /\ b => c -> a => (b => c)

p /\ (p => q) == p /\ q
p /\ (q => p) == p
p \/ (p => q) == true

p \/ (q => p)  == q => p
p \/ q => p /\ q == p == q
p => p == true
true => p == p
p => false == ~p
false => p == true 

p => p \/ q
p /\ q => p
p /\ q => p \/ q
p \/ (q /\ r) => p \/ r
p /\ q => p /\ (q \/ r)

p /\ (p => q) => q

:addLaw a /\ (a => b) => b -> true

(p => r) /\ (q => r) == (p \/ q => r)
:addLaw (a => c) /\ (b => c) -> (a \/ b => c)

(p => r) /\ (~p => r) == r
:addLaw (a => c) /\ (~a => c) -> c

#*******************************************
# this theorem can take a few minutes 
#*******************************************

(p => q) /\ (q => p) == p == q

:addLaw (a => b) /\ (b => a) -> a == b
:addLaw (a => b) /\ (b => a) == a -> b

:addLaw a == b -> (a => b) /\ (b => a) 


(p => q) /\ (q => p) => (p == q)

(p => q) /\ (q => r) => (p => r)

#*******************************************
# auxiliar lemma 
#*******************************************

((p == q) => (p => r)) == ((p == q) => (q => r))
:addLaw ((a == b) => (a => c)) -> ((a == b) => (b => c))

(p == q) /\ (q => r) => (p => r)

#*******************************************
# auxiliar lemma
#*******************************************

((q == r) => (p => r)) == ((q == r) => (p => q))
:addLaw ((b == c) => (a => c)) -> ((b == c) => (a => b))

(p => q) /\ (q == r) => (p => r)

p => q => p

(p => q) => ((p \/ r) => (q \/ r))
(p => q) => ((p /\ r) => (q /\ r))